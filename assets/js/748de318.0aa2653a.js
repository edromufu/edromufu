"use strict";(self.webpackChunkedrom=self.webpackChunkedrom||[]).push([[4257],{5680:(e,r,a)=>{a.d(r,{xA:()=>p,yg:()=>f});var n=a(6540);function o(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function s(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?s(Object(a),!0).forEach((function(r){o(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function t(e,r){if(null==e)return{};var a,n,o=function(e,r){if(null==e)return{};var a,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],r.indexOf(a)>=0||(o[a]=e[a]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var d=n.createContext({}),m=function(e){var r=n.useContext(d),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},p=function(e){var r=m(e.components);return n.createElement(d.Provider,{value:r},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var a=e.components,o=e.mdxType,s=e.originalType,d=e.parentName,p=t(e,["components","mdxType","originalType","parentName"]),l=m(a),c=o,f=l["".concat(d,".").concat(c)]||l[c]||u[c]||s;return a?n.createElement(f,i(i({ref:r},p),{},{components:a})):n.createElement(f,i({ref:r},p))}));function f(e,r){var a=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=a.length,i=new Array(s);i[0]=c;var t={};for(var d in r)hasOwnProperty.call(r,d)&&(t[d]=r[d]);t.originalType=e,t[l]="string"==typeof e?e:o,i[1]=t;for(var m=2;m<s;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2513:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>m});var n=a(8168),o=(a(6540),a(5680));const s={id:"spliting_video_in_frames",title:"Dividir os v\xeddeos em frames",sidebar_position:3,slug:"/spliting_video_in_frames"},i=void 0,t={unversionedId:"vision/training/spliting_video_in_frames",id:"vision/training/spliting_video_in_frames",title:"Dividir os v\xeddeos em frames",description:"Agora, os v\xeddeos ser\xe3o divididos em frames. Para isso, executamos o seguinte script:",source:"@site/docs/vision/training/spliting_video_in_frames.md",sourceDirName:"vision/training",slug:"/spliting_video_in_frames",permalink:"/edromufu/docs/spliting_video_in_frames",draft:!1,editUrl:"https://github.com/edromufu/edromufu/tree/master/edrom-docs/docs/vision/training/spliting_video_in_frames.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"spliting_video_in_frames",title:"Dividir os v\xeddeos em frames",sidebar_position:3,slug:"/spliting_video_in_frames"},sidebar:"tutorialSidebar",previous:{title:"Gravando as imagens",permalink:"/edromufu/docs/recording_from_camera"},next:{title:"\xc1rvore de Arquivos",permalink:"/edromufu/docs/mapeamento-visao"}},d={},m=[],p={toc:m},l="wrapper";function u(e){let{components:r,...a}=e;return(0,o.yg)(l,(0,n.A)({},p,a,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Agora, os v\xeddeos ser\xe3o divididos em frames. Para isso, executamos o seguinte script:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-py"},'import cv2\nimport os\n\npastaVideos = "videos" # Pasta onde videos est\xe3o salvos\npastaFrames = "frames" # Pasta onde frames ser\xe3o salvos\npularFrames = 3 # A cada quantos frames um jpg ser\xe1 salvo\n\nos.chdir(pastaVideos)\nlista_de_arquivo = os.listdir(os.getcwd())\nlista_de_videos = []\nos.chdir("..")\n\nfor arquivo in lista_de_arquivo:\n    if os.path.splitext(arquivo)[1] == ".avi":\n        lista_de_videos.append(arquivo)\n\nnumero_frame=1\ncurrent_frame = 1\n\nfor video in lista_de_videos:\n\n    print (\'From...\' + video)\n    nome_do_video = pastaVideos + "/" + video\n    cap = cv2.VideoCapture(nome_do_video)\n\n    while(True):\n        ret, frame = cap.read()        \n        if ret:\n            if current_frame % pularFrames == 0:\n                name = pastaFrames + \'/frame\' + str(numero_frame) + \'.jpg\'\n                numero_frame +=1\n                print (\'Creating...\' + name)\n                cv2.imwrite(name, frame)\n            current_frame += 1\n        else: break\n    cap.release()\n')),(0,o.yg)("p",null,"A primeira parte \xe9 onde s\xe3o definidos os par\xe2metros. Modifique eles de acordo com o nome da pasta em que os videos est\xe3o, o nome da pasta em que os frames devem ser salvos, e a cada quantos frames do v\xeddeo o script salvar\xe1 um frame (utilizado para evitar frames identicos, para salvar todos os frames utilizar pularFrames = 1)."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-py"},'pastaVideos = "videos" # Pasta onde videos est\xe3o salvos\npastaFrames = "frames" # Pasta onde frames ser\xe3o salvos\npularFrames = 3 # A cada quantos frames um jpg ser\xe1 salvo\n')),(0,o.yg)("p",null,'Em seguida, acessa a pasta dos videos e l\xea o nome de todos os arquivos para iterar sobre eles. Ent\xe3o, salva os que possuem a extens\xe3o .avi em uma lista (para evitar erros com "lixo" na pasta).'),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-py"},'os.chdir(pastaVideos)\nlista_de_arquivo = os.listdir(os.getcwd())\nlista_de_videos = []\nos.chdir("..")\n\nfor arquivo in lista_de_arquivo:\n    if os.path.splitext(arquivo)[1] == ".avi":\n        lista_de_videos.append(arquivo)\n')),(0,o.yg)("p",null,'Por fim, itera sobre todos os v\xeddeos, salvando os frames na pasta designada no formato "frame0.jpg", "frame1.jpg", ..., "frameN.jpg".'),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-py"},"numero_frame=1\ncurrent_frame = 1\n\nfor video in lista_de_videos:\n\n    print ('From...' + video)\n    nome_do_video = pastaVideos + \"/\" + video\n    cap = cv2.VideoCapture(nome_do_video)\n\n    while(True):\n        ret, frame = cap.read()        \n        if ret:\n            if current_frame % pularFrames == 0:\n                name = pastaFrames + '/frame' + str(numero_frame) + '.jpg'\n                numero_frame +=1\n                print ('Creating...' + name)\n                cv2.imwrite(name, frame)\n            current_frame += 1\n        else: break\n    cap.release()\n")),(0,o.yg)("p",null,'O resultado ser\xe1 os frames dos v\xeddeos em formato .jpg pasta designada (no c\xf3digo exemplo, o script est\xe1 no mesmo diret\xf3rio que a pasta "videos" e a "frames").'))}u.isMDXComponent=!0}}]);